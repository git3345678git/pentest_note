HTTP 代表什麼？
HyperText Transfer Protocol



HTTPS 中的 S 代表什麼？
secure 


在右側的模擬網頁上有一個問題，找到它後，點擊它。挑戰標誌是什麼？

THM{INVALID_HTTP_CERT}



---------------------------------------------


上面的範例中使用了什麼 HTTP 協定？
HTTP/1.1 

什麼回應標頭告訴瀏覽器需要多少資料？
Content-Length


---------------------------------------------





GET Request
這用於從 Web 伺服器獲取資訊。


POST Request
這用於向網頁伺服器提交資料並可能建立新記錄


PUT Request
PUT請求是一種HTTP請求方法，用於向伺服器上的指定資源更新或新增資料。與POST請求不同，PUT請求通常用於更新現有資源的資訊，而不是新增一個新的資源。


DELETE Request
DELETE請求是一種HTTP請求方法，用於從伺服器上刪除指定的資源。當客戶端向伺服器發送DELETE請求時，伺服器應該刪除請求中指定的資源，並且回覆客戶端相應的狀態碼以指示操作的結果。

TRACE Request
伺服器會將收到的請求返回給客戶端，這樣客戶端就可以查看伺服器收到的請求內容。TRACE請求是一個用於診斷和測試的工具，通常在開發和測試環境中使用，而不是在實際的生產環境中使用，因為它可能會洩露伺服器端的信息。







---------------------------------------------

200 - 好的	請求已成功完成。

201 - 創建	資源已建立（例如新使用者或新部落格文章）。

301 - 永久移動	這會將客戶端的瀏覽器重新導向到新網頁或告訴搜尋引擎該頁面已移至其他位置並改為在那裡查找。

302 - 找到	與上面的永久重定向類似，但顧名思義，這只是暫時的更改，並且在不久的將來可能會再次更改。

400 - 錯誤請求	這告訴瀏覽器他們的請求中有問題或遺失。如果正在請求的 Web 伺服器資源需要用戶端未傳送的某個參數，有時可以使用此方法。

401 - 未授權	目前，在您透過 Web 應用程式（最常見的是使用使用者名稱和密碼）進行授權之前，您無法查看此資源。

403 - 禁忌	無論您是否登錄，您都無權查看此資源。

405 - 方法不允許	此資源不允許此方法請求，例如，當資源 /create-account 需要 POST 請求時，您會向該資源發送 GET 請求。

404頁面不存在	您要求的頁面/資源不存在。

500 - 內部服務錯誤	伺服器在您的請求中遇到某種錯誤，它不知道如何正確處理。

503服務不可用	

該伺服器無法處理您的請求，因為它已超載或因維護而停機。




如果您建立了新使用者或部落格文章，您可能會收到什麼回應代碼？
201

如果您嘗試造訪不存在的頁面，您可能會收到什麼回應代碼？
404

如果 Web 伺服器無法存取其資料庫且應用程式崩潰，您可能會收到什麼回應代碼？
503

如果您嘗試在不先登入的情況下編輯個人資料，您可能會收到什麼回應代碼？
401


---------------------------------------------
什麼標頭告訴 Web 伺服器正在使用什麼瀏覽器？
User-Agent

什麼標頭告訴瀏覽器正在傳回什麼類型的資料？
Content-Type

什麼標頭告訴 Web 伺服器正在請求哪個網站？
Host


---------------------------------------------



由於HTTP是無狀態的（不會追蹤您先前的請求），因此可以使用 cookie 來提醒 Web 伺服器您是誰、網站的一些個人設定或您以前是否曾造訪過該網站。


哪個標頭用於將 cookie 儲存到您的電腦？
Set-Cookie


---------------------------------------------




向 /room 發出 GET 請求
THM{YOU'RE_IN_THE_ROOM}

向 /blog 發出 GET 請求，並使用齒輪圖示將 URL 欄位中的 id 參數設為 1
THM{YOU_FOUND_THE_BLOG}

向 /user/1 發出 DELETE 請求
THM{USER_IS_DELETED}

向 /user/2 發出 PUT 請求，並將使用者名稱參數設為 admin
THM{USER_HAS_UPDATED}

將 thm 的使用者名稱和 letmein 的密碼 POST 到 /login
THM{HTTP_REQUEST_MASTER}


---------------------------------------------
